import { Discount } from "./tables/discount";
import { List } from "./tables/list";
import { UnitInfo } from "./unitInfo";


export class OrderUtil {

  static returnDetailJson(obj: OrderUtil) {
    return new OrderUtil(
      obj['idInfo'],
      obj['quAmount'],
      obj['idProduct'],
      obj['coProduct'],
      obj['naProduct'],
      obj['txDimension'],
      obj['txPacking'],
      obj['nuPriority'],
      obj['idEnterprise'],
      obj['nuPrice'],
      obj['oppositeNuPrice'],
      obj['discountedNuPrice'],
      obj['quDiscount'],
      obj['coCurrency'],
      obj['oppositeCoCurrency'],
      obj['quStock'], 
      obj['quStockAux'],
      obj['nuAmountDiscount'],
      obj['idDiscount'],
      obj['iva'],
      obj['ivaProducto'],
      obj['taxedNuPrice'],
      obj['idWarehouse'],
      obj['prevWarehouse'],
      obj['coWarehouse'],     
      obj['naWarehouse'],
      obj['discountList'],
      obj['imagenProduct'],
      obj['stepFactor'],
      obj['quMinimum'],
      obj['quMultiple'],
      obj['idProductStructure'],
      obj['idPriceList'],
      obj['coPriceList'],
      obj['unitList'],
      obj['idUnit'],
      obj['inCart'],
      obj['txDescription'],
      obj['tienePrecio'],
      obj['favorito'],
      obj['listaList'],
      obj['subtotal'],
      obj['subtotalConv'],
      obj['quPoints'],
      obj['idList'],
      obj['totalEnUnidades'],
    );
  }

  constructor(
  public idInfo: number,
	public quAmount: number,
	public idProduct: number,
	public coProduct: string,
	public naProduct: string,
	public txDimension: string,
	public txPacking: string,
	public nuPriority: number,
	public idEnterprise: number,

	public nuPrice: number,
	public oppositeNuPrice: number,
	public discountedNuPrice: number,
  public quDiscount: number,
	public coCurrency: string,
	public oppositeCoCurrency: string,

	public quStock: number,
	public quStockAux: number,
	public nuAmountDiscount: number,
	public idDiscount: number,
	public iva: number,
	public ivaProducto: number,
	public taxedNuPrice: number,
	public idWarehouse: number,
	public prevWarehouse: number,
  public coWarehouse :string,
  public naWarehouse: string,
	public discountList: Discount[],
	public imagenProduct: string,
	public stepFactor: number,
	public quMinimum: number,
	public quMultiple: number,
	public idProductStructure: number,
	public idPriceList: number,
  public coPriceList: string,
	public unitList: UnitInfo[], 
	public idUnit: number,
	public inCart: boolean,
	public txDescription: string,
	public tienePrecio: boolean,
	public favorito: boolean,
	public listaList: List[],
	public subtotal: number,
	public subtotalConv: number,
  public quPoints: number,
  public idList : number,
  //el total de productos en unidades. ej 1 docena + 1 unidad => totalunit = 13
  public totalEnUnidades: number, 

  ) { }
}